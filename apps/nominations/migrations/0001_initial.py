# Generated by Django 4.2.11 on 2025-06-27 10:40

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MainCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Main Category',
                'verbose_name_plural': 'Main Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='NominationCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('main_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='nominations.maincategory')),
            ],
            options={
                'verbose_name': 'Nomination Category',
                'verbose_name_plural': 'Nomination Categories',
                'ordering': ['main_category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Nominee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nominees', to='nominations.nominationcategory')),
            ],
            options={
                'verbose_name': 'Nominee',
                'verbose_name_plural': 'Nominees',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voter_identifier', models.CharField(max_length=100)),
                ('voter_type', models.CharField(choices=[('web', 'Web'), ('ussd', 'USSD'), ('sms', 'SMS')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('nominee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='nominations.nominee')),
            ],
            options={
                'verbose_name': 'Vote',
                'verbose_name_plural': 'Votes',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['voter_identifier'], name='nominations_voter_i_67ce4a_idx'), models.Index(fields=['created_at'], name='nominations_created_77e009_idx')],
            },
        ),
        migrations.AddConstraint(
            model_name='vote',
            constraint=models.UniqueConstraint(fields=('nominee', 'voter_identifier'), name='unique_vote_per_nominee'),
        ),
        migrations.AddIndex(
            model_name='nominee',
            index=models.Index(fields=['approved'], name='nominations_approve_5d01da_idx'),
        ),
        migrations.AddConstraint(
            model_name='nominationcategory',
            constraint=models.UniqueConstraint(fields=('main_category', 'name'), name='unique_category_name_per_main_category'),
        ),
    ]
